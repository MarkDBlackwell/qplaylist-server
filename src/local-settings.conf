# Copyright (C) 2024 Mark D. Blackwell.
#   All rights reserved.
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

RewriteEngine On

KeepAlive Off

# Display the Apache server's status
<Location /server-status>
	SetHandler server-status
	# My home IP address

	Require ip 69.143.45.52  192.168.0.104
</Location>

# Redirect to WTMD all requests without a sub-URI
<LocationMatch ^/(|index.html?)$>
	RewriteRule ^ https://wtmd.org/radio [L,R=307]
</LocationMatch>

#  Good references on caching:
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
# https://csswizardry.com/2019/03/cache-control-for-civilians/
# https://httpd.apache.org/docs/current/mod/mod_expires.html

ExpiresActive On

ExpiresDefault "modification plus 1 day"

<Directory /var/www/html/app>
	Require all granted
</Directory>

<Directory /var/www/html/app/dynamic>
	Require all granted

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^LatestFiveNew(|HD2)\.html\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFiveNew(|HD2)\.html$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFiveNew(|HD2)\.html\.gz$ - [T=text/html,E=no-gzip:1]
</Directory>

<Directory /var/www/html/app-dark>
	Require all granted
</Directory>

<Directory /var/www/html/app-dark/dynamic>
	Require all granted

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^LatestFiveNew(|HD2)\.html\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFiveNew(|HD2)\.html$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFiveNew(|HD2)\.html\.gz$ - [T=text/html,E=no-gzip:1]
</Directory>

<Directory /var/www/html/like-dev>
	Require all granted

#	<Files _>
#		Header set Cache-Control "no-cache"
#	</Files>

	# The main server's Access-Control allows HTTPS protocol only.
	# Disable HTTP.
	RewriteCond "%{HTTPS}" off
	RewriteRule ^ "https://%{HTTP_HOST}%{REQUEST_URI}" [L,R=301]

	# The PHP program is accessed (always) by requesting append.json.
	# This eases development by allowing optional access through the local filesystem.
	RewriteRule ^append\.json$ append.php [C]

	# Redirect to main server to handle PHP.
	RewriteRule ^append\.php$ https://wtmd.org/like/$0 [L,R=308]
</Directory>

<Directory /var/www/html/like-dev/dynamic>
	Require all granted

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^LatestFiveNew(|HD2)\.html\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFiveNew(|HD2)\.html$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFiveNew(|HD2)\.html\.gz$ - [T=text/html,E=no-gzip:1]
</Directory>

<Directory /var/www/html/onair>
	Require all granted

	<Files schedule.json>
		Header set Cache-Control "no-cache"
	</Files>
</Directory>

<Directory /var/www/html/player>
	Require all granted
</Directory>

<Directory /var/www/html/player/dynamic>
	Require all granted

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^LatestFive(|New)(|HD2)\.html\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFive(|New)(|HD2)\.html$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFive(|New)(|HD2)\.html\.gz$ - [T=text/html,E=no-gzip:1]
</Directory>

<Directory /var/www/html/playlist>
	Require all granted
</Directory>

<Directory /var/www/html/playlist/dynamic>
	Require all granted

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

# See:
#   http://httpd.apache.org/docs/2.4/mod/mod_deflate.html#precompressed

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^(LatestFive|LatestFiveNew|NowPlaying|RecentSongs)(|HD2)\.html\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^(LatestFive|LatestFiveNew|NowPlaying|RecentSongs)(|HD2)\.html$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^(LatestFive|LatestFiveNew|NowPlaying|RecentSongs)(|HD2)\.html\.gz$ - [T=text/html,E=no-gzip:1]
</Directory>

<Directory /var/www/html/remember>
	Require all granted

	# Disable http
	RewriteCond "%{HTTPS}" off
	RewriteRule ^ "https://%{HTTP_HOST}%{REQUEST_URI}" [L,R=301]

	# The PHP program is accessed (always) by requesting append.json.
	# This eases development by allowing optional access through the local filesystem.
	RewriteRule ^append\.json$ append.php [C]

	# Redirect to main server to handle PHP.
	RewriteRule ^append\.php$ https://wtmd.org/remember/$0 [QSA,L]

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading of QPlaylist's precompressed JSON file which contains the latest five songs.
	<Files LatestFew.json.gz>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</Files>

	# If the client accepts gzip
	# and the requested gzip-compressed QPlaylist file exists...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFew\.json$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFew\.json\.gz$ - [T=application/json,E=no-gzip:1]
</Directory>

<Directory /var/www/html/wtmdapp>
	Require all granted

	# Disable https
	RewriteCond "%{HTTPS}" on
	RewriteRule ^ "http://%{HTTP_HOST}%{REQUEST_URI}" [L,R=301]

	Header set Cache-Control "max-age=4, stale-while-revalidate=60, stale-if-error=60, no-transform, must-understand, no-store"

	AddEncoding gzip .gz

	# Enable uploading precompressed QPlaylist song files.
	<FilesMatch ^LatestFive(|HD2)\.json\.gz$>
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped & non-gzipped QPlaylist files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	# If the gzip compressed QPlaylist files exist
	# and the client accepts gzip...
	RewriteCond "%{HTTP:Accept-encoding}" gzip
	RewriteCond "%{REQUEST_FILENAME}.gz" -s

	# Append ".gz".
	RewriteRule ^LatestFive(|HD2)\.json$ $0.gz

	# Serve the correct media type, and prevent mod_deflate double gzip.
	RewriteRule ^LatestFive(|HD2)\.json\.gz$ - [T=application/json,E=no-gzip:1]
</Directory>
